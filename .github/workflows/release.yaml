name: Release

on:
  push:
    branches:
      - main

concurrency:
  group: release

jobs:
  tests:
    name: Run unit and e2e tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          tags: backend:latest

      - name: Run backend
        run: docker run -d --name backend -p 3000:3000 backend:latest

      - name: Install dependencies
        run: npm ci

      - name: Migrate and seed postgres database
        run: |
          npm run migrate:run
          npm run seed

      - name: Run unit tests
        run: npm run test

      - name: Run end-to-end tests
        run: npm run test:e2e

  release-please:
    name: Releaser
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - id: release
        name: Run release-please
        uses: googleapis/release-please-action@v4
        with:
          release-type: node

  publish:
    name: Publish image
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get release tag name
        run: |
          full_tag_name="${{ needs.release-please.outputs.tag_name }}"
          tag_name=${full_tag_name#v}
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV

      - id: docker-build-push
        name: Build, tag, and push image to registry
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/laukl/pensions-api:${{ env.TAG_NAME }}
            ghcr.io/laukl/pensions-api:latest
